name: CI

on:
  - push
  - pull_request

jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charm: [controller, ui]

    steps:
    - uses: actions/checkout@v2
    - run: sudo apt update
    - run: sudo apt install tox
    - run: tox -e ${{ matrix.charm }}

  deploy:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - uses: balchua/microk8s-actions@v0.2.2
      with:
        channel: '1.20/stable'
        addons: '["dns", "storage", "rbac", "metallb:10.64.140.43-10.64.140.49"]'

    - name: Install dependencies
      run: |
        set -eux
        sudo pip3 install charmcraft==1.0.0
        sudo snap install charm --classic
        sudo snap install juju --classic
        sudo snap install juju-helpers --classic
        sudo snap install juju-wait --classic
        sudo apt update
        sudo apt install -y firefox-geckodriver
        sudo pip3 install -r test-requirements.txt

    - name: Bootstrap
      run: |
        set -eux
        sg microk8s -c 'juju bootstrap microk8s uk8s'
        juju add-model kubeflow

    - name: Deploy charm dependencies
      timeout-minutes: 15
      run: |
        set -eux
        juju model-config update-status-hook-interval=15s
        juju deploy cs:istio
        juju config istio-pilot default-gateway=kubeflow-gateway
        sleep 10
        kubectl patch role -n kubeflow istio-ingressgateway-operator -p '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"name":"istio-ingressgateway-operator"},"rules":[{"apiGroups":["*"],"resources":["*"],"verbs":["*"]}]}'
        juju wait -wvt 300
        juju model-config update-status-hook-interval=5m

        # Manually create PodDefaults CRD due to
        # https://github.com/canonical/admission-webhook-operator/issues/5
        kubectl apply -f https://raw.githubusercontent.com/canonical/admission-webhook-operator/master/src/crds.yaml
        # juju deploy cs:admission-webhook

        juju deploy cs:kubeflow-dashboard --config profile=kubeflow-user
        juju deploy cs:kubeflow-profiles
        juju relate kubeflow-dashboard kubeflow-profiles

        # https://bugs.launchpad.net/juju/+bug/1921739
        (i=600; while ! juju wait -wvt 30 ; do ((--i)) || exit; sleep 1; done)

    - name: Deploy Jupyter
      run: |
        set -eux
        juju bundle deploy --build
        juju relate istio-pilot jupyter-ui
        juju wait -wvt 300

    - name: Test Jupyter
      run: pytest -vvs tests/

    - run: kubectl get all -A
      if: failure()

    - run: kubectl get notebooks -A
      if: failure()

    - run: kubectl get pods -A -oyaml
      if: failure()

    - run: juju status
      if: failure()

    - name: Get jupyter-controller workload logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-app=jupyter-controller
      if: failure()

    - name: Get jupyter-controller operator logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-operator=jupyter-controller
      if: failure()

    - name: Get jupyter-ui workload logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-app=jupyter-ui
      if: failure()

    - name: Get jupyter-ui operator logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-operator=jupyter-ui
      if: failure()

    - name: Generate inspect tarball
      run: >
        sg microk8s <<EOF
          microk8s inspect | \
          grep -Po "Report tarball is at \K.+" | \
          xargs -I {} cp {} inspection-report-${{ strategy.job-index }}.tar.gz
        EOF
      if: failure()

    - name: Upload inspect tarball
      uses: actions/upload-artifact@v2
      with:
        name: inspection-reports
        path: ./inspection-report-${{ strategy.job-index }}.tar.gz
      if: failure()

    - name: Upload selenium screenshots
      uses: actions/upload-artifact@v2
      with:
        name: selenium-screenshots
        path: /tmp/selenium-*.png
      if: failure()

    - name: Upload HAR logs
      uses: actions/upload-artifact@v2
      with:
        name: selenium-har
        path: /tmp/selenium-*.har
      if: failure()
